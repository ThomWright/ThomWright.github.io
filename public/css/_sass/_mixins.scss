
/*
  Example:

  $transitions: (
    box-shadow: (
      normal: $normal-shadow,
      hover : $hover-shadow
    ),
    color: (
      normal: $normal-font-color,
      hover : $hover-font-color
    )
  );
  @include hover-transitions($transitions);
 */
@mixin hover-transitions($list) {
  $types: map-keys($list);

  @each $type in $types {
    #{$type}: map-get(map-get($list, $type), normal);
  }
  transition: all 0.2s ease-out;

  &:active,
  &:focus,
  &:hover,
  a:focus>& {
    @each $type in $types {
      #{$type}: map-get(map-get($list, $type), hover);
    }
    transition: all 0.05s linear;
  }
}

@mixin fix-left {
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
}

@mixin brand-border($side) {
  @include single-side-border($side, $brand-color);
}

@mixin single-side-border($side, $color) {
  border: {
    width: 0px;
    radius: 0px;
    #{$side}: {
      width: 5px;
      color: $color;
      style: solid;
    }
  }
}

@mixin remove-border($side) {
  border-#{$side}-style: none;
}

@mixin vertical-margin($size) {
  margin: {
    top: $size;
    bottom: $size;
  }
}

@mixin vertical-padding($size) {
  padding: {
    top: $size;
    bottom: $size;
  }
}

@mixin horizontal-margin($size) {
  margin: {
    left: $size;
    right: $size;
  }
}

@mixin horizontal-padding($size) {
  padding: {
    left: $size;
    right: $size;
  }
}

/*
  Cards - from https://css-tricks.com/snippets/sass/material-shadows-mixin/
 */
/// Gives a card depth effect.
/// @param {Number} $depth - depth level (between 1 and 5)
/// @link http://www.google.com/design/spec/layout/layout-principles.html#layout-principles-dimensionality Google Design
/// @requires {function} top-shadow
/// @requires {function} bottom-shadow
@mixin border-shadow($depth: 1) {
  @if $depth < 1 {
    box-shadow: none;
  } @else if $depth > 5 {
    @warn "Invalid $depth `#{$depth}` for mixin `card`.";
  } @else {
    box-shadow: bottom-shadow($depth), top-shadow($depth);
  }
}

/// Computes a top-shadow for a card effect.
/// @param {Number} $depth - depth level
/// @return {List}
@function top-shadow($depth) {
  $primary-offset: nth(1.5 3 10 14 19, $depth) * 1px;
  $blur: nth(1.5 3 10 14 19, $depth) * 4px;
  $color: rgba(black, nth(.12 .16 .19 .25 .30, $depth));

  @return 0 $primary-offset $blur $color;
}

/// Computes a bottom-shadow for a card effect.
/// @param {Number} $depth - depth level
/// @return {List}
@function bottom-shadow($depth) {
  $primary-offset: nth(1.5 3 6 10 15, $depth) * 1px;
  $blur: nth(1 3 3 5 6, $depth) * 4px;
  $color: rgba(black, nth(.24 .23 .23 .22 .22, $depth));

  @return 0 $primary-offset $blur $color;
}

@mixin card {
  @include border-shadow;
  background-color: white;

  margin-bottom: $base-padding;
  &:last-child {
    margin-bottom: 0;
  }

  > * {
    @include horizontal-padding($base-padding);
    &:first-child {
      padding-top: $base-padding;
    }
    &:last-child {
      padding-bottom: $base-padding;
    }
  }

  header {
    h1 {
      @include vertical-margin(0);
    }
    margin-bottom: $base-padding;
  }

  footer {
    background: darken(white, 2%);
    border-top: 1px solid $gray-lightest;
  }
}
